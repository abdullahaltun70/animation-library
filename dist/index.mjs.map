{"version":3,"sources":["../src/hooks/useAnimation.ts","../src/components/Animate.tsx"],"sourcesContent":["// src/hooks/useAnimation.ts\n'use client'; \n\nimport { useEffect, useRef, useState, useCallback } from 'react';\n\n// Define the types needed for the hook\nexport type AnimationType = 'fade' | 'slide' | 'scale' | 'rotate' | 'bounce';\n\nexport interface AnimationConfig {\n  type: AnimationType;\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  distance?: number; // Used for slide, bounce\n  degrees?: number; // Used for rotate\n  scale?: number; // Used for scale\n  opacity?: { // Used for fade\n    start?: number;\n    end?: number;\n  };\n}\n\ninterface UseAnimationReturn<T extends HTMLElement> {\n  ref: React.RefObject<T | null>;\n  key: number; // Key to force re-render/re-animation\n  replay: () => void;\n}\n\nconst DEFAULTS = {\n  duration: 0.5,\n  delay: 0,\n  easing: 'ease-out',\n  opacityStart: 0,\n  opacityEnd: 1,\n  distance: 50,\n  degrees: 360,\n  scale: 0.8,\n};\n\n/**\n * Custom hook to apply CSS animations based on configuration.\n * Returns a ref to attach to the target element and a replay function.\n */\nexport function useAnimation<T extends HTMLElement>(\n  config: AnimationConfig\n): UseAnimationReturn<T> {\n  const {\n    type,\n    duration = DEFAULTS.duration,\n    delay = DEFAULTS.delay,\n    easing = DEFAULTS.easing,\n    distance,\n    degrees,\n    scale,\n    opacity = {},\n  } = config;\n\n  const { start: opacityStart = DEFAULTS.opacityStart, end: opacityEnd = DEFAULTS.opacityEnd } = opacity;\n\n  const [key, setKey] = useState(0);\n  const elementRef = useRef<T>(null);\n\n  // Memoize the function to get the correct animation class WITH direction\n  const getAnimationClass = useCallback((): string => {\n    switch (type) {\n      case 'fade':\n        return 'animate-fade'; // Matches _animations.scss\n      case 'slide': {\n        // Determine direction based on distance sign. Default to positive if undefined/zero.\n        const effectiveDistance = distance ?? DEFAULTS.distance;\n        // NOTE: Assuming X-axis slide for now based on original library structure.\n        // Could add an 'axis' prop if Y-axis slides are needed.\n        return effectiveDistance >= 0 ? 'animate-slide-x-positive' : 'animate-slide-x-negative';\n      }\n      case 'scale':\n        return 'animate-scale';\n      case 'rotate': {\n        const effectiveDegrees = degrees ?? DEFAULTS.degrees;\n        return effectiveDegrees >= 0 ? 'animate-rotate-positive' : 'animate-rotate-negative';\n      }\n      case 'bounce': {\n        // Using distance sign for bounce direction (positive=up, negative=down)\n        const effectiveDistance = distance ?? DEFAULTS.distance;\n        return effectiveDistance >= 0 ? 'animate-bounce-positive' : 'animate-bounce-negative';\n      }\n      default:\n         // Help TypeScript ensure all cases are handled\n         const _exhaustiveCheck: never = type;\n         console.warn(`Unknown animation type: ${type}`);\n         return '';\n    }\n  }, [type, distance, degrees]);\n\n\n  // Effect to apply styles and classes\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    const animationClass = getAnimationClass();\n    if (!animationClass) return;\n\n     // --- Clean up previous classes ---\n     const classesToRemove = Array.from(element.classList).filter(cls => cls.startsWith('animate-'));\n     if (classesToRemove.length > 0) {\n        element.classList.remove(...classesToRemove);\n     }\n\n     // --- Apply new class ---\n     // Force reflow before adding class might be needed in some edge cases for replay,\n     // but key-based re-render often suffices.\n     // void element.offsetWidth; // Example reflow trigger (use cautiously)\n     element.classList.add(animationClass);\n\n\n    // --- Set CSS Custom Properties ---\n    // Ensure values are valid numbers before setting\n    element.style.setProperty('--animation-duration', `${validateTime(duration, DEFAULTS.duration)}s`);\n    element.style.setProperty('--animation-delay', `${validateTime(delay, DEFAULTS.delay)}s`);\n    element.style.setProperty('--animation-easing', easing);\n\n    // Type-specific properties - use ABSOLUTE values for magnitude variables\n    if (type === 'fade') {\n      element.style.setProperty('--opacity-start', validateOpacity(opacityStart).toString());\n      element.style.setProperty('--opacity-end', validateOpacity(opacityEnd).toString());\n    }\n\n    if (type === 'slide' || type === 'bounce') {\n        const distanceValue = distance !== undefined ? distance : DEFAULTS.distance;\n        // **FIX**: Use absolute value for the CSS variable magnitude\n        element.style.setProperty('--distance', `${Math.abs(distanceValue)}px`);\n    }\n\n    if (type === 'rotate') {\n        const degreesValue = degrees !== undefined ? degrees : DEFAULTS.degrees;\n        // **FIX**: Use absolute value for the CSS variable magnitude\n        element.style.setProperty('--degrees', `${Math.abs(degreesValue)}deg`);\n    }\n\n    if (type === 'scale') {\n        const scaleValue = scale !== undefined ? scale : DEFAULTS.scale;\n        element.style.setProperty('--scale', scaleValue.toString());\n    }\n\n    // Cleanup function\n    return () => {\n      if (elementRef.current) {\n        elementRef.current.classList.remove(animationClass);\n        // Maybe clear custom properties if needed, though often overkill\n        // elementRef.current.style.removeProperty('--animation-duration');\n        // ... etc\n      }\n    };\n  }, [key, type, duration, delay, easing, distance, degrees, scale, opacityStart, opacityEnd, getAnimationClass]);\n\n  const replay = useCallback(() => {\n    setKey((prevKey) => prevKey + 1);\n  }, []);\n\n  return { ref: elementRef, key, replay };\n}\n\n// Helper validation functions\nfunction validateTime(value: number | undefined, defaultValue: number): number {\n  return typeof value === 'number' && value >= 0 ? value : defaultValue;\n}\n\nfunction validateOpacity(value: number): number {\n    // Ensure opacity is between 0 and 1\n    const numValue = typeof value === 'number' ? value : NaN;\n    if (isNaN(numValue)) {\n        // Decide a default if value is invalid - depends if it's start or end\n        // Returning 0 here, but could be context-dependent (like DEFAULTS.opacityStart/End)\n        return 0;\n    }\n    return Math.max(0, Math.min(1, numValue));\n}","'use client';\n\n// src/components/Animate.tsx\nimport React, { forwardRef, HTMLAttributes, JSX, ReactNode } from 'react';\nimport { useAnimation } from '@/hooks/useAnimation';\n\n\n// Animation types supported by the component\ntype AnimationType = 'fade' | 'slide' | 'scale' | 'rotate' | 'bounce';\n\n// Animation configuration interface\nexport interface AnimationConfig {\n  type: AnimationType;\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  distance?: number;\n  degrees?: number;\n  scale?: number;\n  opacity?: {\n    start?: number;\n    end?: number;\n  };\n}\n\n// Props for the Animate component\ninterface AnimateProps extends HTMLAttributes<HTMLDivElement> {\n  children: ReactNode;\n  type: AnimationType;\n  duration?: number;\n  delay?: number;\n  easing?: string;\n  distance?: number;\n  degrees?: number;\n  scale?: number;\n  opacity?: {\n    start?: number;\n    end?: number;\n  };\n  as?: keyof JSX.IntrinsicElements | React.ComponentType<any>;\n  className?: string;\n  onAnimationComplete?: () => void;\n}\n\n/**\n * A wrapper component to easily apply animations using the useAnimation hook.\n * Supports forwarding refs and can render as any HTML element or component.\n *\n * @example\n * <Animate \n *   type=\"fade\" \n *   duration={0.5}\n *   className=\"my-custom-class\"\n * >\n *   <p>Content to animate</p>\n * </Animate>\n */\nexport const Animate = forwardRef<HTMLDivElement, AnimateProps>(\n  ({ \n    children, \n    as: Component = 'div', \n    className = '',\n    onAnimationComplete,\n    // Animation config props\n    type,\n    duration,\n    delay,\n    easing,\n    distance,\n    degrees,\n    scale,\n    opacity,\n    ...props \n  }, forwardedRef) => {\n    // Create animation config object from props\n    const animationConfig: AnimationConfig = {\n      type,\n      duration,\n      delay,\n      easing,\n      distance,\n      degrees,\n      scale,\n      opacity\n    };\n\n    // Use the animation hook\n    const { ref, key } = useAnimation<HTMLDivElement>(animationConfig);\n    \n    // Combine the refs\n    const setRefs = (element: HTMLDivElement | null) => {\n      // Set the local ref from useAnimation\n      if (typeof ref === 'object' && ref !== null) {\n        (ref as React.MutableRefObject<HTMLDivElement | null>).current = element;\n      }\n      \n      // Set the forwarded ref\n      if (forwardedRef) {\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(element);\n        } else {\n          (forwardedRef as React.MutableRefObject<HTMLDivElement | null>).current = element;\n        }\n      }\n    };\n    \n    // Handle animation end event\n    const handleAnimationEnd = (e: React.AnimationEvent<HTMLDivElement>) => {\n      // Only trigger if it's the main animation ending, not child animations\n      if (e.target === ref.current) {\n        onAnimationComplete?.();\n      }\n      \n      // Call the original onAnimationEnd if provided in props\n      props.onAnimationEnd?.(e);\n    };\n    \n    // Create combined className\n    const combinedClassName = `animated ${className}`.trim();\n    \n    // Use createElement to properly handle the dynamic component type\n    return React.createElement(\n      Component,\n      {\n        ...props,\n        ref: setRefs,\n        className: combinedClassName,\n        key, // Key helps force re-animation\n        onAnimationEnd: handleAnimationEnd,\n        // Add data attributes for potential debugging/testing\n        'data-animation-type': type,\n        'data-animation-duration': duration ?? 0.5,\n        'data-animation-delay': delay ?? 0,\n      },\n      children\n    );\n  }\n);\n\nAnimate.displayName = 'Animate';\n\nexport default Animate;\n"],"mappings":"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","names":[]}