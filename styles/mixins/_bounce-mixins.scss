// mixins/_bounce-mixins.scss
/**
 * Bounce mixins
 *
 * @param {time} $duration - Duration of the animation (default: $bounce-duration)
 * @param {string} $easing - Timing function (default: $bounce-easing)
 * @param {time} $delay - Delay for the animation (default: $bounce-delay)
 * @param {length} $height - Height of the bounce (default: $bounce-height)
 */
@mixin bounce-in(
  $duration: $bounce-duration,
  $easing: $bounce-easing,
  $delay: $bounce-delay,
  $height: $bounce-height
) {
  // Validation of the duration,
  $duration: validate-value($duration, 'time', $bounce-duration, 'bounce-in $duration');

  // CSS custom properties
  --bounce-duration: #{$duration};
  --bounce-easing: #{$easing};
  --bounce-delay: #{$delay};
  --bounce-height: #{$height};
  --fade-opacity-start: #{$fade-opacity-start};
  --fade-opacity-end: #{$fade-opacity-end};

  // Animation
  animation: bounceIn var(--bounce-duration) var(--bounce-easing) var(--bounce-delay) forwards;

  // Performance optimization
  will-change: transform, opacity;

  // Accessibility
  @include respect-motion-preferences;
}

@mixin bounce-out(
  $duration: $bounce-duration,
  $easing: $bounce-easing,
  $delay: $bounce-delay,
  $height: $bounce-height
) {
  // Validation of the duration,
  $duration: validate-value($duration, 'time', $bounce-duration, 'bounce-out $duration');

  // CSS custom properties
  --bounce-duration: #{$duration};
  --bounce-easing: #{$easing};
  --bounce-delay: #{$delay};
  --bounce-height: #{$height};
  --fade-opacity-start: #{$fade-opacity-start};
  --fade-opacity-end: #{$fade-opacity-end};

  // Animation
  animation: bounceOut var(--bounce-duration) var(--bounce-easing) var(--bounce-delay) forwards;

  // Performance optimization
  will-change: transform, opacity;

  // Accessibility
  @include respect-motion-preferences;
}
