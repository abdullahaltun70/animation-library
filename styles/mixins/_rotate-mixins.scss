// mixins/_rotate-mixins.scss
/**
 * Rotate mixins
 *
 * @param {time} $duration - Duration of the animation (default: $rotate-duration)
 * @param {string} $easing - Timing function (default: $rotate-easing)
 * @param {time} $delay - Delay for the animation (default: $rotate-delay)
 * @param {angle} $degrees - Number of degrees to rotate (default: $rotate-degrees)
 * @param {string} $origin - Transform origin for the rotation (default: $rotate-origin)
 */
@mixin rotate-in(
  $duration: $rotate-duration,
  $easing: $rotate-easing,
  $delay: $rotate-delay,
  $degrees: $rotate-degrees,
  $origin: $rotate-origin
) {
  // Validation
  $duration: validate-value($duration, 'time', $rotate-duration, 'rotate-in $duration');

  // CSS custom properties
  --rotate-duration: #{$duration};
  --rotate-easing: #{$easing};
  --rotate-delay: #{$delay};
  --rotate-degrees: #{$degrees};
  --fade-opacity-start: #{$fade-opacity-start};
  --fade-opacity-end: #{$fade-opacity-end};

  // Properties
  transform-origin: $origin;
  animation: rotateIn var(--rotate-duration) var(--rotate-easing) var(--rotate-delay) forwards;

  // Performance optimization
  will-change: transform, opacity;

  // Accessibility
  @include respect-motion-preferences;
}

@mixin rotate-out(
  $duration: $rotate-duration,
  $easing: $rotate-easing,
  $delay: $rotate-delay,
  $degrees: $rotate-degrees,
  $origin: $rotate-origin
) {
  // Validation
  $duration: validate-value($duration, 'time', $rotate-duration, 'rotate-out $duration');

  // CSS custom properties
  --rotate-duration: #{$duration};
  --rotate-easing: #{$easing};
  --rotate-delay: #{$delay};
  --rotate-degrees: #{$degrees};
  --fade-opacity-start: #{$fade-opacity-start};
  --fade-opacity-end: #{$fade-opacity-end};

  // Properties
  transform-origin: $origin;
  animation: rotateOut var(--rotate-duration) var(--rotate-easing) var(--rotate-delay) forwards;

  // Performance optimization
  will-change: transform, opacity;

  // Accessibility
  @include respect-motion-preferences;
}