// _animation-utilities.scss
/**
 * Animation utilities for Framna
 * This module contains mixins and classes for accessible animations
 */

// Configuration variables
$animation-enabled: true !default; // Global switch for all animations
$animation-reduced: 0.5 !default; // Reduction factor for prefers-reduced-motion

// Feature flags - enable/disable specific animations
$use-fade: true !default;
$use-scale: true !default;
$use-slide: true !default;
$use-rotate: true !default;
$use-bounce: true !default;

// Default values
$default-duration: 0.5s !default;
$default-delay: 0s !default;
$default-easing: ease-in-out !default;
$default-fill-mode: forwards !default;

// Opacity values
$opacity-visible: 1 !default;
$opacity-hidden: 0 !default;

// Default distance
$default-slide-distance: 30px !default;
$default-scale-from: 0.8 !default;
$default-scale-to: 1.2 !default;
$default-rotate-degrees: 180deg !default;

// Accessibility media queries
$prefers-reduced-motion: '(prefers-reduced-motion: reduce)' !default;
$supports-animations: '(prefers-reduced-motion: no-preference)' !default;

// Global accessibility helper
@mixin respect-motion-preferences {
  @media #{$supports-animations} {
    &.minimal-animation,
    .minimal-animation & {
      animation-duration: calc(var(--duration, $default-duration) * #{$animation-reduced}) !important;
      transition-duration: calc(var(--duration, $default-duration) * #{$animation-reduced}) !important;
    }
  }

  @media #{$prefers-reduced-motion} {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// Base animation mixin
@mixin animate-base($name, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing, $fill-mode: $default-fill-mode) {
  animation-name: $name;
  animation-duration: $duration;
  animation-delay: $delay;
  animation-timing-function: $easing;
  animation-fill-mode: $fill-mode;
  animation-iteration-count: 1;

  // Set the CSS variables for reuse in keyframes
  --duration: #{$duration};
  --delay: #{$delay};
  --easing: #{$easing};

  @include respect-motion-preferences;
}

// Fade mixins
@mixin fade-in($duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(fadeIn, $duration, $delay, $easing);
}

@mixin fade-out($duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(fadeOut, $duration, $delay, $easing);
}

// Scale mixins
@mixin scale-in($from: $default-scale-from, $to: 1, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --scale-from: #{$from};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(scaleIn, $duration, $delay, $easing);
}

@mixin scale-out($from: 1, $to: $default-scale-to, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --scale-to: #{$to};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(scaleOut, $duration, $delay, $easing);
}

// Slide mixins
@mixin slide-in-left($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideInLeft, $duration, $delay, $easing);
}

@mixin slide-in-right($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideInRight, $duration, $delay, $easing);
}

@mixin slide-in-up($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideInUp, $duration, $delay, $easing);
}

@mixin slide-in-down($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideInDown, $duration, $delay, $easing);
}

@mixin slide-out-left($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideOutLeft, $duration, $delay, $easing);
}

@mixin slide-out-right($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideOutRight, $duration, $delay, $easing);
}

@mixin slide-out-up($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideOutUp, $duration, $delay, $easing);
}

@mixin slide-out-down($distance: $default-slide-distance, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --slide-distance: #{$distance};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(slideOutDown, $duration, $delay, $easing);
}

// Rotate mixins
@mixin rotate-in($degrees: $default-rotate-degrees, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --rotate-degrees: #{$degrees};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(rotateIn, $duration, $delay, $easing);
}

@mixin rotate-out($degrees: $default-rotate-degrees, $duration: $default-duration, $delay: $default-delay, $easing: $default-easing) {
  --rotate-degrees: #{$degrees};
  --fade-opacity-start: #{$opacity-hidden};
  --fade-opacity-end: #{$opacity-visible};

  @include animate-base(rotateOut, $duration, $delay, $easing);
}

// Fade utility classes
@if $use-fade {
  .fade-in {
    @include fade-in();
    &--slow { @include fade-in($duration: 1s); }
    &--fast { @include fade-in($duration: 0.2s); }
    &--delayed { @include fade-in($delay: 0.5s); }
  }

  .fade-out {
    @include fade-out();
    &--slow { @include fade-out($duration: 1s); }
    &--fast { @include fade-out($duration: 0.2s); }
    &--delayed { @include fade-out($delay: 0.5s); }
  }
}

// Scale utility classes
@if $use-scale {
  .scale-in {
    @include scale-in();
    &--slow { @include scale-in($duration: 1s); }
    &--fast { @include scale-in($duration: 0.2s); }
    &--delayed { @include scale-in($delay: 0.5s); }
    &--large { @include scale-in($from: 0.5, $to: 1); }
    &--small { @include scale-in($from: 0.9, $to: 1); }
  }

  .scale-out {
    @include scale-out();
    &--slow { @include scale-out($duration: 1s); }
    &--fast { @include scale-out($duration: 0.2s); }
    &--delayed { @include scale-out($delay: 0.5s); }
    &--large { @include scale-out($from: 1, $to: 1.5); }
    &--small { @include scale-out($from: 1, $to: 1.1); }
  }
}

// Bounce utility classes
@if $use-bounce {
  .bounce-in { @include bounce-in(); }

  .bounce-out { @include bounce-out(); }
}

// Slide utility classes
@if $use-slide {
  .slide-in-left { @include slide-in-left(); }
  .slide-in-right { @include slide-in-right(); }
  .slide-in-up { @include slide-in-up(); }
  .slide-in-down { @include slide-in-down(); }

  .slide-out-left { @include slide-out-left(); }
  .slide-out-right { @include slide-out-right(); }
  .slide-out-up { @include slide-out-up(); }
  .slide-out-down { @include slide-out-down(); }

  // Variations
  .slide-in-left--far { @include slide-in-left($distance: 100px); }
  .slide-in-right--far { @include slide-in-right($distance: 100px); }
  .slide-in-left--slow { @include slide-in-left($duration: 1s); }
  .slide-in-right--fast { @include slide-in-right($duration: 0.2s); }
}

// Rotate utility classes
@if $use-rotate {
  .rotate-in {
    @include rotate-in();
    &--slow { @include rotate-in($duration: 1s); }
    &--fast { @include rotate-in($duration: 0.2s); }
    &--delayed { @include rotate-in($delay: 0.5s); }
    &--partial { @include rotate-in($degrees: 90deg); }
  }

  .rotate-out {
    @include rotate-out();
    &--slow { @include rotate-out($duration: 1s); }
    &--fast { @include rotate-out($duration: 0.2s); }
    &--delayed { @include rotate-out($delay: 0.5s); }
    &--partial { @include rotate-out($degrees: 90deg); }
  }
}

// Class for reduced motion
.minimal-animation {
  * {
    animation-duration: calc(var(--duration, $default-duration) * #{$animation-reduced}) !important;
    transition-duration: calc(var(--duration, $default-duration) * #{$animation-reduced}) !important;
  }
}

// Global configuration to disable animations
@if not $animation-enabled {
  * {
    animation: none !important;
    transition: none !important;
    transform: none !important;
  }
}
